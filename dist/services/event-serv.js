class EventService{constructor(){this.defaultPage="events"}init(){this.renderEvents()}renderEvents=t=>{const e=document.querySelector("#events"),a=e.querySelector(".event-modal-wrapper"),n=(a.querySelector(".modal"),e.querySelector(".add-event-modal")),d=n.querySelector(".modal"),l=e.querySelector(".add-event-modal .form"),i=e.querySelector(".add-event-close"),o=e.querySelector(".edit-event-modal"),s=o.querySelector(".modal"),c=e.querySelector(".edit-event-modal .form"),r=e.querySelector(".edit-event-close"),v=e.querySelector(".event__list"),u=db.collection("events"),m=e.querySelector(".btn-add.add-event");let p;const y=()=>{d.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{n.style.display="none"}),500)},b=()=>{s.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{o.style.display="none"}),500)},f=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],S=["Jan","Feb","Mar","Apr","Mai","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],g=t=>{const e=t.data(),a=new Date(e.date),n=`${f[a.getDay()]} ${a.getDate()}.${S[a.getMonth()]} ${a.getFullYear()}`,d=(e.assign.match(/\b(\w)/g).join(""),`\n\t\t\t\t<div class="card card-event card-${e.label}" data-id='${t.id}'>\n\t\t\t\t<div class='card-${e.label}-line'></div>\n\t\t\t\t<div class="card-container">\n\t\t\t\t\t\t<div class="card-content card-toggle">\n\t\t\t\t\t\t\t<div class="card-info">\n\t\t\t\t\t\t\t<p class='card-date'> ${n}</p>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='card-details'>\n\t\t\t\t\t\t\t\t<h4 class='card-title'>${e.title}</h4>\n\t\t\t\t\t\t\t\t<p class='card-location'>${e.location}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='description'>\n\t\t\t\t\t\t\t\t\t<p>${e.description}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t\t\n\t\t\t\t\t<p class='card-date'> ${n}</p>\n\t\t\t\t\t<div>${e.assign}</div>\n\t\t\t\t\t\x3c!-- <div>${e.label}</div> --\x3e\n\t\t\t\t\t<div hidden>\n\t\t\t\t\t\t<button class="btn btn-edit edit-event">Edit</button>\n\t\t\t\t\t\t<button class="btn btn-delete delete-event">Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);v.insertAdjacentHTML("beforeend",d);document.querySelector(`[data-id='${t.id}'] .edit-event`).addEventListener("click",(()=>{o.style.display="flex",s.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",p=t.id,c.title.value=e.title,c.description.value=e.description,c.location.value=e.location,c.date.value=e.date,c.assign.value=e.assign,c.label.value=e.label}));document.querySelector(`[data-id='${t.id}'] .delete-event`).addEventListener("click",(()=>{u.doc(`${t.id}`).delete().then((()=>{console.log("Document succesfully deleted!")})).catch((t=>{console.log("Error removing document",t)}))}))};m.addEventListener("click",(()=>{n.style.display="flex",d.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",l.title.value="",l.description.value="",l.location.value="",l.date.value="",l.assign.value="",l.label.value=""})),i.addEventListener("click",(t=>{t.preventDefault(),y()})),r.addEventListener("click",(t=>{t.preventDefault(),b()})),window.addEventListener("click",(t=>{t.target===n&&y(),t.target===o&&b()})),u.onSnapshot((t=>{t.docChanges().forEach((t=>{if("added"===t.type&&g(t.doc),"removed"===t.type){let e=document.querySelector(`[data-id='${t.doc.id}']`);e.parentElement.removeChild(e)}if("modified"===t.type){let e=document.querySelector(`[data-id='${t.doc.id}']`);e.parentElement.removeChild(e),g(t.doc)}}))})),l.addEventListener("submit",(t=>{t.preventDefault(),u.add({title:l.title.value,description:l.description.value,location:l.location.value,date:l.date.value,assign:l.assign.value,label:l.label.value}),y()})),c.addEventListener("submit",(t=>{t.preventDefault(),u.doc(p).update({title:c.title.value,description:c.description.value,location:c.location.value,date:c.date.value,assign:c.assign.value,label:c.label.value}),b()}))}}const eventService=new EventService;export default eventService;
//# sourceMappingURL=event-serv.js.map