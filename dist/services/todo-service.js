class TodoService{constructor(){this.defaultPage="todos"}init(){this.renderTodo()}renderTodo=t=>{const e=document.querySelector("#todos"),o=e.querySelector(".todo-modal-wrapper"),d=(o.querySelector(".modal"),e.querySelector(".add-todo-modal")),i=d.querySelector(".modal"),l=d.querySelector(".form"),a=e.querySelector(".add-todo-close"),r=e.querySelector(".edit-todo-modal"),s=r.querySelector(".modal"),n=r.querySelector(".form"),c=e.querySelector(".edit-todo-close"),u=e.querySelector(".todo__list"),v=db.collection("todo"),y=e.querySelector(".add-todo");let m;const p=()=>{i.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{d.style.display="none"}),500)},f=()=>{s.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{r.style.display="none"}),500)},S=t=>{const e=t.data(),o=`\n\t\t\t\t<div class="card card-todo card-todo-${e.priority}" data-id='${t.id}'>\n\t\t\t\t\t<h4 class='card-title'>${e.title}</h4>\n\t\t\t\t\t<p class='card-description'>${e.list}</p>\n\t\t\t\t\n\t\t\t\t\t<div>${e.assign}</div>\n\t\t\t\t\t\x3c!-- <div>${e.priority}</div> --\x3e\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class="btn btn-edit edit-todo">Edit</button>\n\t\t\t\t\t\t<button class="btn btn-delete delete-todo">Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;u.insertAdjacentHTML("beforeend",o);document.querySelector(`[data-id='${t.id}'] .edit-todo`).addEventListener("click",(()=>{r.style.display="flex",s.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",m=t.id,n.title.value=e.title,n.list.value=e.list,n.assign.value=e.assign,n.priority.value=e.priority}));document.querySelector(`[data-id='${t.id}'] .delete-todo`).addEventListener("click",(()=>{v.doc(`${t.id}`).delete().then((()=>{console.log("Document succesfully deleted!")})).catch((t=>{console.log("Error removing document",t)}))}))};y.addEventListener("click",(()=>{d.style.display="flex",i.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",l.title.value="",l.list.value="",l.assign.value="",l.priority.value=""})),a.addEventListener("click",(t=>{t.preventDefault(),p()})),c.addEventListener("click",(t=>{t.preventDefault(),f()})),window.addEventListener("click",(t=>{t.target===d&&p(),t.target===r&&f()}));let q=!1;v.onSnapshot((t=>{q||(q=!0,setTimeout((()=>{q=!1})),t.docChanges().forEach((t=>{if("added"===t.type&&S(t.doc),"removed"===t.type){let e=document.querySelector(`[data-id='${t.doc.id}']`);e.parentElement.removeChild(e)}if("modified"===t.type){let e=document.querySelector(`[data-id='${t.doc.id}']`);e.parentElement.removeChild(e),S(t.doc)}})))})),l.addEventListener("submit",(t=>{t.preventDefault(),v.add({title:l.title.value,list:l.list.value,assign:l.assign.value,priority:l.priority.value}),p()})),n.addEventListener("submit",(t=>{t.preventDefault(),v.doc(m).update({title:n.title.value,list:n.list.value,assign:n.assign.value,priority:n.priority.value}),f()}))}}const todoService=new TodoService;export default todoService;
//# sourceMappingURL=todo-service.js.map