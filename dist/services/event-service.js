<<<<<<< HEAD
const days=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months=["Jan","Feb","Mar","Apr","Mai","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];class EventService{constructor(){this.defaultPage="events"}init(){this.renderEvents()}renderEvents=t=>{const e=document.querySelector("#events"),n=e.querySelector(".event-modal-wrapper"),l=(n.querySelector(".modal"),e.querySelector(".add-event-modal")),a=l.querySelector(".modal"),d=e.querySelector(".add-event-modal .form"),o=e.querySelector(".add-event-close"),i=e.querySelector(".edit-event-modal"),c=i.querySelector(".modal"),s=e.querySelector(".edit-event-modal .form"),r=e.querySelector(".edit-event-close"),v=e.querySelector(".btn-add.add-event");const u=()=>{a.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{l.style.display="none"}),500)},m=()=>{c.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{i.style.display="none"}),500)};v.addEventListener("click",(()=>{l.style.display="flex",a.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",d.title.value="",d.description.value="",d.location.value="",d.date.value="",d.assign.value="",d.label.value=""})),o.addEventListener("click",(t=>{t.preventDefault(),u()})),r.addEventListener("click",(t=>{t.preventDefault(),m()})),window.addEventListener("click",(t=>{t.target===l&&u(),t.target===i&&m()})),d.addEventListener("submit",(t=>{console.log("adding card"),t.preventDefault(),eventsCollection.add({title:d.title.value,description:d.description.value,location:d.location.value,date:d.date.value,assign:d.assign.value,label:d.label.value}),u()})),s.addEventListener("submit",(t=>{console.log("edit card"),t.preventDefault(),eventsCollection.doc(undefined).update({title:s.title.value,description:s.description.value,location:s.location.value,date:s.date.value,assign:s.assign.value,label:s.label.value}),m()}))}}const eventService=new EventService,renderEvent=t=>{const e=events.querySelector(".event__list"),n=t.data();console.log("hello its me",n);const l=new Date(n.date),a=`${days[l.getDay()]} ${l.getDate()}.${months[l.getMonth()]} ${l.getFullYear()}`,d=n.assign.match(/\b(\w)/g).join(""),o=document.querySelectorAll(".card-content.card-toggle"),i=document.querySelectorAll(".description");o.forEach((function(t,e){t.addEventListener("click",(function(){i[e].classList.toggle("open-card")}))}));const c=`\n\t\t\t\t<div class="card card-event card-${n.label}" data-id='${t.id}'>\n\t\t\t\t\t<div class='card-${n.label}-line'></div>\n\t\t\t\t\t<div class="card-container">\n\t\t\t\t\t\t<div class="card-content card-toggle">\n\t\t\t\t\t\t\t<div class="card-info">\n\t\t\t\t\t\t\t\t<p class='card-label'>${n.label}</p>\n\t\t\t\t\t\t\t\t<p class='card-date'> ${a}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='card-details'>\n\t\t\t\t\t\t\t\t<h4 class='card-title'>${n.title}</h4>\n\t\t\t\t\t\t\t\t<p class='card-location'>${n.location}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='description'>\n\t\t\t\t\t\t\t\t<p>${n.description}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t<div class='card-bottom'>\n\t\t\t\t\t\t\t<button class="btn btn-edit edit-event btn-circle">E</button>\n\t\t\t\t\t\t\t<button class="btn btn-delete delete-event btn-circle">D</button>\n\t\t\t\t\t\t\t<div class='btn avatar'>${d}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;e.insertAdjacentHTML("beforeend",c);document.querySelector(`[data-id='${t.id}'] .edit-event`).addEventListener("click",(()=>{openEditModal(),id=t.id,editModalForm.title.value=n.title,editModalForm.description.value=n.description,editModalForm.location.value=n.location,editModalForm.date.value=n.date,editModalForm.assign.value=n.assign,editModalForm.label.value=n.label}));document.querySelector(`[data-id='${t.id}'] .delete-event`).addEventListener("click",(()=>{eventsCollection.doc(`${t.id}`).delete().then((()=>{console.log("Document succesfully deleted!")})).catch((t=>{console.log("Error removing document",t)}))}))},eventsCollection=db.collection("events");eventsCollection.onSnapshot((t=>{t.docChanges().forEach((t=>{if("added"===t.type&&(renderEvent(t.doc),console.log("add item",t.doc)),"removed"===t.type){let e=document.querySelector(`[data-id='${t.doc.id}']`);e.parentElement.removeChild(e)}if("modified"===t.type){let e=document.querySelector(`[data-id='${t.doc.id}']`);e.parentElement.removeChild(e),renderEvent(t.doc),console.log("breyta")}}))}));export default eventService;
=======
class EventService{constructor(){this.defaultPage="events"}init(){this.renderEvents()}renderEvents=e=>{const t=document.querySelector("#events"),a=t.querySelector(".event-modal-wrapper"),l=(a.querySelector(".modal"),t.querySelector(".add-event-modal")),n=l.querySelector(".modal"),d=t.querySelector(".add-event-modal .form"),i=t.querySelector(".add-event-close"),o=t.querySelector(".edit-event-modal"),s=o.querySelector(".modal"),c=t.querySelector(".edit-event-modal .form"),r=t.querySelector(".edit-event-close"),v=t.querySelector(".event__list"),u=db.collection("events"),m=t.querySelector(".add-event");let p;const y=()=>{n.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{l.style.display="none"}),500)},S=()=>{s.style.cssText="animation: slideDown .5s ease; animation-fill-mode: forwards;",setTimeout((()=>{o.style.display="none"}),500)},f=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],b=["Jan","Feb","Mar","Apr","Mai","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],g=e=>{const t=e.data(),a=new Date(t.date),l=`${f[a.getDay()]} ${a.getDate()}.${b[a.getMonth()]} ${a.getFullYear()}`,n=`\n\t\t\t\t<div class="card card-event card-${t.label}" data-id='${e.id}'>\n\t\t\t\t\t<h4 class='card-title'>${t.title}</h4>\n\t\t\t\t\t<p class='card-description'>${t.description}</p>\n\t\t\t\t\t<p class='card-location'>${t.location}</p>\n\t\t\t\t\t<p class='card-date'> ${l}</p>\n\t\t\t\t\t<div>${t.assign}</div>\n\t\t\t\t\t\x3c!-- <div>${t.label}</div> --\x3e\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class="btn btn-edit edit-event">Edit</button>\n\t\t\t\t\t\t<button class="btn btn-delete delete-event">Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;v.insertAdjacentHTML("beforeend",n);document.querySelector(`[data-id='${e.id}'] .edit-event`).addEventListener("click",(()=>{o.style.display="flex",s.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",p=e.id,c.title.value=t.title,c.description.value=t.description,c.location.value=t.location,c.date.value=t.date,c.assign.value=t.assign,c.label.value=t.label}));document.querySelector(`[data-id='${e.id}'] .delete-event`).addEventListener("click",(()=>{u.doc(`${e.id}`).delete().then((()=>{console.log("Document succesfully deleted!")})).catch((e=>{console.log("Error removing document",e)}))}))};m.addEventListener("click",(()=>{l.style.display="flex",n.style.cssText="animation: slideUp .5s ease; animation-fill-mode: forwards;",d.title.value="",d.description.value="",d.location.value="",d.date.value="",d.assign.value="",d.label.value=""})),i.addEventListener("click",(e=>{e.preventDefault(),y()})),r.addEventListener("click",(e=>{e.preventDefault(),S()})),window.addEventListener("click",(e=>{e.target===l&&y(),e.target===o&&S()})),u.onSnapshot((e=>{e.docChanges().forEach((e=>{if("added"===e.type&&g(e.doc),"removed"===e.type){let t=document.querySelector(`[data-id='${e.doc.id}']`);t.parentElement.removeChild(t)}if("modified"===e.type){let t=document.querySelector(`[data-id='${e.doc.id}']`);t.parentElement.removeChild(t),g(e.doc)}}))})),d.addEventListener("submit",(e=>{e.preventDefault(),u.add({title:d.title.value,description:d.description.value,location:d.location.value,date:d.date.value,assign:d.assign.value,label:d.label.value}),y()})),c.addEventListener("submit",(e=>{e.preventDefault(),u.doc(p).update({title:c.title.value,description:c.description.value,location:c.location.value,date:c.date.value,assign:c.assign.value,label:c.label.value}),S()}))}}const eventService=new EventService;export default eventService;
>>>>>>> 71f704a98f6f07b2a9da6747818c570a7df97c73
//# sourceMappingURL=event-service.js.map