const modalWrapper=document.querySelector(".modal-wrapper"),addModal=document.querySelector(".add-modal"),addModalForm=document.querySelector(".add-modal .form"),editModal=document.querySelector(".edit-modal"),editModalForm=document.querySelector(".edit-modal .form"),eventList=document.querySelector(".event__list"),eventsCollection=db.collection("events"),btnAdd=document.querySelector(".btn-add");let id;const days=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months=["Jan","Feb","Mar","Apr","Mai","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],renderUser=e=>{const d=e.data(),t=new Date(d.date),o=`${days[t.getDay()]} ${t.getDate()}.${months[t.getMonth()]} ${t.getFullYear()}`;console.log(t);const a=`\n    <div class="event__item" data-id='${e.id}'>\n      <div>${d.title}</div>\n      <div>${d.description}</div>\n      <div>${d.location}</div>\n      <div>${o}</div>\n      <div>${d.assign}</div>\n      <div>${d.label}</div>\n      <div>\n        <button class="btn btn-edit">Edit</button>\n        <button class="btn btn-delete">Delete</button>\n      </div>\n    </div>\n  `;eventList.insertAdjacentHTML("beforeend",a);document.querySelector(`[data-id='${e.id}'] .btn-edit`).addEventListener("click",(()=>{editModal.classList.add("modal-show"),id=e.id,editModalForm.title.value=d.title,editModalForm.description.value=d.description,editModalForm.location.value=d.location,editModalForm.date.value=d.date,editModalForm.assign.value=d.assign,editModalForm.label.value=d.label}));document.querySelector(`[data-id='${e.id}'] .btn-delete`).addEventListener("click",(()=>{eventsCollection.doc(`${e.id}`).delete().then((()=>{console.log("Document succesfully deleted!")})).catch((e=>{console.log("Error removing document",e)}))}))};btnAdd.addEventListener("click",(()=>{addModal.classList.add("modal-show"),addModalForm.title.value="",addModalForm.description.value="",addModalForm.location.value="",addModalForm.date.value="",addModalForm.assign.value="",addModalForm.label.value=""})),window.addEventListener("click",(e=>{e.target===addModal&&addModal.classList.remove("modal-show"),e.target===editModal&&editModal.classList.remove("modal-show")})),eventsCollection.onSnapshot((e=>{e.docChanges().forEach((e=>{if("added"===e.type&&renderUser(e.doc),"removed"===e.type){let d=document.querySelector(`[data-id='${e.doc.id}']`);d.parentElement.removeChild(d)}if("modified"===e.type){let d=document.querySelector(`[data-id='${e.doc.id}']`);d.parentElement.removeChild(d),renderUser(e.doc)}}))})),addModalForm.addEventListener("submit",(e=>{e.preventDefault(),eventsCollection.add({title:addModalForm.title.value,description:addModalForm.description.value,location:addModalForm.location.value,date:addModalForm.date.value,assign:addModalForm.assign.value,label:addModalForm.label.value}),modalWrapper.classList.remove("modal-show")})),editModalForm.addEventListener("submit",(e=>{e.preventDefault(),eventsCollection.doc(id).update({title:editModalForm.title.value,description:editModalForm.description.value,location:editModalForm.location.value,date:editModalForm.date.value,assign:editModalForm.assign.value,label:editModalForm.label.value}),editModal.classList.remove("modal-show")}));
//# sourceMappingURL=index.js.map